apply plugin: 'com.android.application'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

buildProperties {
    secrets {
        file project.file('secrets.properties')
    }
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "net.komunan.komunan_tw"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "DEFAULT_CONSUMER_KEY", "\"" + buildProperties.secrets['consumer_key'].string + "\""
        buildConfigField "String", "DEFAULT_CONSUMER_SECRET", "\"" + buildProperties.secrets['consumer_secret'].string + "\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Android Support Library
    implementation "com.android.support:appcompat-v7:$asl_version"
    implementation "com.android.support:support-annotations:$asl_version"
    implementation "com.android.support:design:$asl_version"
    // AAC: Lifecycle + Room + Paging
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.paging:runtime:$paging_version"
    implementation "android.arch.work:work-runtime:$work_version"
    // Kotlin + Anko
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"
    implementation "org.jetbrains.anko:anko-constraint-layout:$anko_version"
    implementation "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-recyclerview-v7-coroutines:$anko_version"
    // Misc
    implementation "com.github.ajalt:timberkt:1.5.1"
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "com.marcinmoskala.PreferenceHolder:preferenceholder:1.51"
    implementation("com.mikepenz:materialdrawer:6.0.7@aar") {
        transitive = true
    }
    implementation "org.greenrobot:eventbus:3.1.1"
    implementation "org.twitter4j:twitter4j-core:4.0.7"
    // for Debug
    debugImplementation "com.facebook.stetho:stetho:1.5.0"
    // Test Libraries
    testImplementation "junit:junit:4.12"
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
